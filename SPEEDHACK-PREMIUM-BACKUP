-- üöÄ WALVY COMMUNITY SPEEDHACK + GRAPPLE (COMPACT GUI)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local DEFAULT_SPEED = 16
local currentSpeed = 150
local enabled = false
local character, humanoid, hrp, backpack, tool
local speedConnection, fakeFireLoop
local itemID = "Grapple Hook"
local useItemRE = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Net"):WaitForChild("RE/UseItem")
local toggleButton -- Forward declaration for toggle button

-- ===== Character Setup =====
local function updateCharacter()
    character = player.Character or player.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid", 5)
    hrp = character:WaitForChild("HumanoidRootPart", 5)
    backpack = player:WaitForChild("Backpack")
    if humanoid then humanoid.JumpPower = 50 end
end

-- ===== SpeedHack =====
local function startSpeedHack()
    if speedConnection then speedConnection:Disconnect() speedConnection = nil end
    if not enabled or not humanoid or not hrp then return end
    speedConnection = RunService.Heartbeat:Connect(function()
        if not enabled or not humanoid or not hrp then return end
        local dir = humanoid.MoveDirection.Magnitude > 0 and humanoid.MoveDirection.Unit or Vector3.new(0, 0, 0)
        hrp.AssemblyLinearVelocity = Vector3.new(dir.X * currentSpeed, hrp.AssemblyLinearVelocity.Y, dir.Z * currentSpeed)
    end)
end

-- ===== Grapple =====
local function buyGrapple()
    pcall(function()
        ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Net"):WaitForChild("RF/CoinsShopService/RequestBuy"):InvokeServer(itemID)
    end)
end

local function autoEquip()
    pcall(function()
        if not (character and humanoid and humanoid.Health > 0) then return end
        local currentTool = character:FindFirstChildOfClass("Tool")
        if currentTool and currentTool.Name == itemID then return end
        local grappleInBackpack = backpack:FindFirstChild(itemID)
        if grappleInBackpack then humanoid:EquipTool(grappleInBackpack) end
    end)
end

local function ensureGrapple()
    tool = character:FindFirstChild(itemID) or backpack:FindFirstChild(itemID)
    if not tool then
        buyGrapple()
        task.wait(0.5)
        autoEquip()
    else
        autoEquip()
    end
end

local function setupToolListener()
    if not backpack then return end
    character.ChildRemoved:Connect(function(child)
        if child.Name == itemID and enabled then autoEquip() end
    end)
    backpack.ChildAdded:Connect(function(child)
        if child.Name == itemID and enabled then autoEquip() end
    end)
end

local function fakeFire()
    autoEquip()
    pcall(function()
        useItemRE:FireServer(1.9832406361897787)
    end)
end

local function startFakeFireLoop()
    if fakeFireLoop then fakeFireLoop:Disconnect() fakeFireLoop = nil end
    fakeFireLoop = RunService.Heartbeat:Connect(function()
        if enabled then fakeFire() end
    end)
end

local function stopAll()
    if speedConnection then speedConnection:Disconnect() speedConnection = nil end
    if humanoid then humanoid.WalkSpeed = DEFAULT_SPEED end
    if fakeFireLoop then fakeFireLoop:Disconnect() fakeFireLoop = nil end
end

-- ===== Toggle Function =====
local function toggleEnabled()
    enabled = not enabled
    updateCharacter()
    if enabled then
        startSpeedHack()
        ensureGrapple()
        setupToolListener()
        startFakeFireLoop()
        if toggleButton then toggleButton.Text = "‚è∏ Off" end
    else
        stopAll()
        if toggleButton then toggleButton.Text = "‚ñ∂ On" end
    end
end

-- ===== GUI =====
local gui = Instance.new("ScreenGui")
gui.Name = "WalvyCombinedGUI"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 180, 0, 120)
frame.Position = UDim2.new(0.5, -90, 0.5, -60)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Active = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 6)

local title = Instance.new("TextLabel", frame)
title.Text = "WALVY | Speed Hack"
title.Size = UDim2.new(1, 0, 0, 20)
title.Position = UDim2.new(0, 0, 0, 5)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 12

-- Master Toggle Button
toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(0.8, 0, 0, 30)
toggleButton.Position = UDim2.new(0.1, 0, 0.35, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 11
toggleButton.Text = enabled and "‚è∏ Off" or "‚ñ∂ On"
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 4)
toggleButton.MouseButton1Click:Connect(toggleEnabled)

-- Speed Input
local speedInput = Instance.new("TextBox", frame)
speedInput.Size = UDim2.new(0.8, 0, 0, 22)
speedInput.Position = UDim2.new(0.1, 0, 0.65, 0)
speedInput.PlaceholderText = "Speed 0-250"
speedInput.ClearTextOnFocus = false
speedInput.Text = tostring(currentSpeed)
speedInput.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
speedInput.TextColor3 = Color3.fromRGB(255, 255, 255)
speedInput.Font = Enum.Font.Gotham
speedInput.TextSize = 10
Instance.new("UICorner", speedInput).CornerRadius = UDim.new(0, 4)
speedInput:GetPropertyChangedSignal("Text"):Connect(function()
    local val = tonumber(speedInput.Text)
    if val then
        currentSpeed = math.clamp(val, 0, 250)
        speedInput.Text = tostring(currentSpeed) -- Update text to reflect clamped value
    end
end)

-- ===== Dragging =====
local dragging, dragInput, dragStart, startPos
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                  startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- ===== Shortcut Q =====
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Q then
        toggleEnabled()
    end
end)

-- ===== Initial Setup =====
updateCharacter()
if enabled then
    startSpeedHack()
    ensureGrapple()
    setupToolListener()
    startFakeFireLoop()
end

-- ===== Respawn Handling =====
player.CharacterAdded:Connect(function()
    task.wait(0.5)
    updateCharacter()
    if enabled then
        startSpeedHack()
        ensureGrapple()
        setupToolListener()
        startFakeFireLoop()
    end
    if gui and not gui.Parent then gui.Parent = player:WaitForChild("PlayerGui") end
end)
