-- üöÄ WALVY COMMUNITY SPEEDHACK + GRAPPLE HOOK
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character, humanoid, hrp
local speedConnection, smoothLoop, equipLoop

-- ===== VARS =====
local enabled = false
local currentSpeed = 150
local DEFAULT_SPEED = 16
local itemID = "Grapple Hook"
local useItemRE = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Net"):WaitForChild("RE/UseItem")
local args = {1.9832406361897787}

-- ===== GUI =====
local gui = Instance.new("ScreenGui")
gui.Name = "WalvySpeedGrappleGUI"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 200, 0, 130)
frame.Position = UDim2.new(0.5, -100, 0.5, -65)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Active = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 8)

local title = Instance.new("TextLabel", frame)
title.Text = "WALVY COMMUNITY\nSPEED + GRAPPLE"
title.Size = UDim2.new(1, 0, 0, 35)
title.Position = UDim2.new(0, 0, 0, 5)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 12

local toggleButton = Instance.new("TextButton", frame)
toggleButton.Text = "‚ñ∂ Turn On"
toggleButton.Size = UDim2.new(0.8, 0, 0, 30)
toggleButton.Position = UDim2.new(0.1, 0, 0.40, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 12
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 6)

local speedInput = Instance.new("TextBox", frame)
speedInput.Size = UDim2.new(0.8, 0, 0, 25)
speedInput.Position = UDim2.new(0.1, 0, 0.70, 0)
speedInput.PlaceholderText = "Set speed (40-1000)"
speedInput.ClearTextOnFocus = false
speedInput.Text = tostring(currentSpeed)
speedInput.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
speedInput.TextColor3 = Color3.fromRGB(255, 255, 255)
speedInput.Font = Enum.Font.Gotham
speedInput.TextSize = 11
Instance.new("UICorner", speedInput).CornerRadius = UDim.new(0, 5)

-- ===== FUNCTIONS =====
local function updateCharacter()
    character = player.Character or player.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid", 5)
    hrp = character:WaitForChild("HumanoidRootPart", 5)
end

-- === SPEED ===
local function startSpeedHack()
    if speedConnection then speedConnection:Disconnect() end
    speedConnection = RunService.Heartbeat:Connect(function()
        if not enabled or not humanoid or not hrp then return end
        local dir = humanoid.MoveDirection.Magnitude > 0 and humanoid.MoveDirection.Unit or Vector3.new()
        hrp.AssemblyLinearVelocity = Vector3.new(dir.X * currentSpeed, hrp.AssemblyLinearVelocity.Y, dir.Z * currentSpeed)
    end)
end

local function stopSpeedHack()
    if speedConnection then speedConnection:Disconnect() speedConnection = nil end
end

-- === GRAPPLE ===
local function buyItem()
    pcall(function()
        ReplicatedStorage.Packages.Net["RF/CoinsShopService/RequestBuy"]:InvokeServer(itemID)
    end)
end

local function autoEquip()
    if not character then return end
    local backpack = player:WaitForChild("Backpack")
    local tool = character:FindFirstChild(itemID) or backpack:FindFirstChild(itemID)
    if tool and tool.Parent ~= character then
        tool.Parent = character
    end
end

local function fakeUse()
    if not character then return end
    local tool = character:FindFirstChild(itemID)
    if tool then
        pcall(function() useItemRE:FireServer(unpack(args)) end)
    end
end

local function ensureGrapple()
    if not character then return end
    if not character:FindFirstChild(itemID) and not player.Backpack:FindFirstChild(itemID) then
        buyItem()
    end
    autoEquip()
end

local function startSmoothLoop()
    if smoothLoop then smoothLoop:Disconnect() end
    smoothLoop = RunService.RenderStepped:Connect(function()
        if enabled then fakeUse() end
    end)
end

local function startEquipLoop()
    if equipLoop then equipLoop:Disconnect() end
    equipLoop = RunService.Heartbeat:Connect(function()
        if enabled then ensureGrapple() end
    end)
end

-- ===== EVENTS =====
player.CharacterAdded:Connect(function()
    task.wait(0.4)
    updateCharacter()
    if enabled then
        startSpeedHack()
        buyItem()
        autoEquip()
    end
end)

toggleButton.MouseButton1Click:Connect(function()
    enabled = not enabled
    updateCharacter()
    if enabled then
        toggleButton.Text = "‚è∏ Turn Off"
        startSpeedHack()
        buyItem()
        autoEquip()
        startSmoothLoop()
        startEquipLoop()
    else
        toggleButton.Text = "‚ñ∂ Turn On"
        if humanoid then humanoid.WalkSpeed = DEFAULT_SPEED end
        stopSpeedHack()
        if smoothLoop then smoothLoop:Disconnect() smoothLoop = nil end
        if equipLoop then equipLoop:Disconnect() equipLoop = nil end
    end
end)

speedInput:GetPropertyChangedSignal("Text"):Connect(function()
    local val = tonumber(speedInput.Text)
    if val then
        currentSpeed = math.clamp(val, 40, 1000)
    end
end)

-- ===== DRAG GUI =====
local dragging, dragInput, dragStart, startPos
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                   startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
